services:
  backend:
    image: head2head-backend
    container_name: head2head-backend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:Kais123@db:5432/user_db
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  celery-worker:
    image: head2head-backend
    container_name: head2head-celery-worker
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_app worker --loglevel=info --concurrency=4 --queues=default,ai_quiz
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:Kais123@db:5432/user_db
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - PYTHONPATH=/app/src
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

  flower:
    image: head2head-backend
    container_name: head2head-flower
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:Kais123@db:5432/user_db
      - REDIS_URL=redis://redis:6379/0
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - PYTHONPATH=/app/src
    depends_on:
      redis:
        condition: service_started
    restart: unless-stopped

  db:
    image: postgres:15
    container_name: postgres-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Kais123
      - POSTGRES_DB=user_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 12
  redis:
    image: redis:7
    container_name: redis-cache
    ports:
      - "6379:6379"
    restart: unless-stopped

volumes:
  postgres_data: